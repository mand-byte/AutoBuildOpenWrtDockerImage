name: Build OpenWrt Docker Image (for NAS)

on:
  workflow_dispatch:
    inputs:
      LAN_IP:
        description: 'LAN IP Address'
        required: false
        default: '192.168.1.1'

env:
  LAN_IP: ${{ github.event.inputs.LAN_IP }}

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: x86_64
          
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential ccache clang flex bison g++ gawk \
            gcc-multilib g++-multilib gettext git libncurses5-dev \
            libncursesw5-dev libssl-dev python3 \
            python3-setuptools python3-dev rsync subversion swig \
            unzip wget file time xsltproc zlib1g-dev

      - name: Clone OpenWrt source code
        run: |
          git clone https://github.com/openwrt/openwrt.git
          cd openwrt
          git fetch --tags
          # 获取最新 openwrt-x.y.z tag（不带rc）
          TAG=$(git tag | grep -E '^v?[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | grep -v rc | tail -n1)
          if [ -z "$TAG" ]; then
            echo "No stable tag found!"
            exit 1
          fi
          echo "Switching to tag: $TAG"
          git checkout $TAG
      - name: Add custom feeds
        working-directory: openwrt
        run: |
          if [ -f ../../customfeeds.conf ]; then
            cat ../../customfeeds.conf >> feeds.conf.default
          fi

      - name: Update and install custom feeds
        working-directory: openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      
      - name: Copy custom .config
        run: |
          cp ../.config >> .config
        working-directory: openwrt

      


      - name: Customize network config (LAN & PPPoE)
        working-directory: openwrt
        run: |
          mkdir -p files/etc/config
          cat > files/etc/config/network <<EOF
          config interface 'lan'
              option ifname 'eth0'
              option proto 'static'
              option ipaddr '${LAN_IP}'
              option netmask '255.255.255.0'
          EOF
      - name: Build firmware
        working-directory: openwrt
        run: |
          make -j$(nproc) download V=s || make -j1 V=s download
          make -j$(nproc) V=s

      - name: Upload firmware to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-firmware
          path: openwrt/bin/targets
      

      
